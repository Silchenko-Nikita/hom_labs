
(expressions.story)
Scenario: Expression without saving
Examples:
Given a new evaluator
When I evaluate string <input>
Then I should get result <result>

|input|result|
|100.00 + 112.5|212.50|
|([2, -2, 1] + [1, 5, 2]) * [1, 2, 3]|18.00|
|3 + [1, 5, 2] * [1, 2, 3]|20.00|
|[[1, 2], [2, 1]] + [[1, 2], [2, 1]]|[[2.00, 4.00], [4.00, 2.00]]|
|det([[2, 4], [4, 2]])|-12.00|
|[1, 5, 2] * [1, 2, 3] + det([[1, 2], [2, 1]] + [[1, 2], [2, 1]])|5.00|

Example: {input=100.00 + 112.5, result=212.50}
Given a new evaluator
When I evaluate string 100.00 + 112.5
Then I should get result 212.50

Example: {input=([2, -2, 1] + [1, 5, 2]) * [1, 2, 3], result=18.00}
Given a new evaluator
When I evaluate string ([2, -2, 1] + [1, 5, 2]) * [1, 2, 3]
Then I should get result 18.00

Example: {input=3 + [1, 5, 2] * [1, 2, 3], result=20.00}
Given a new evaluator
When I evaluate string 3 + [1, 5, 2] * [1, 2, 3]
Then I should get result 20.00

Example: {input=[[1, 2], [2, 1]] + [[1, 2], [2, 1]], result=[[2.00, 4.00], [4.00, 2.00]]}
Given a new evaluator
When I evaluate string [[1, 2], [2, 1]] + [[1, 2], [2, 1]]
Then I should get result [[2.00, 4.00], [4.00, 2.00]]

Example: {input=det([[2, 4], [4, 2]]), result=-12.00}
Given a new evaluator
When I evaluate string det([[2, 4], [4, 2]])
Then I should get result -12.00

Example: {input=[1, 5, 2] * [1, 2, 3] + det([[1, 2], [2, 1]] + [[1, 2], [2, 1]]), result=5.00}
Given a new evaluator
When I evaluate string [1, 5, 2] * [1, 2, 3] + det([[1, 2], [2, 1]] + [[1, 2], [2, 1]])
Then I should get result 5.00


Scenario: Expression with saving variables
Examples:
Given a new evaluator
When I evaluate string <input>
When I evaluate string <varname>
Then I should get result <result>

|input|varname|result|
|A = 100.00 + 112.5|A|212.50|
|B = ([2, -2, 1] + [1, 5, 2]) * [1, 2, 3]|B|18.00|
|C = 3 + [1, 5, 2] * [1, 2, 3]|C|20.00|
|D = [[1, 2], [2, 1]] + [[1, 2], [2, 1]]|D|[[2.00, 4.00], [4.00, 2.00]]|
|E = det([[2, 4], [4, 2]])|E|-12.00|
|F = [1, 5, 2] * [1, 2, 3] + det([[1, 2], [2, 1]] + [[1, 2], [2, 1]])|F|5.00|

Example: {input=A = 100.00 + 112.5, varname=A, result=212.50}
Given a new evaluator
When I evaluate string A = 100.00 + 112.5
When I evaluate string A
Then I should get result 212.50

Example: {input=B = ([2, -2, 1] + [1, 5, 2]) * [1, 2, 3], varname=B, result=18.00}
Given a new evaluator
When I evaluate string B = ([2, -2, 1] + [1, 5, 2]) * [1, 2, 3]
When I evaluate string B
Then I should get result 18.00

Example: {input=C = 3 + [1, 5, 2] * [1, 2, 3], varname=C, result=20.00}
Given a new evaluator
When I evaluate string C = 3 + [1, 5, 2] * [1, 2, 3]
When I evaluate string C
Then I should get result 20.00

Example: {input=D = [[1, 2], [2, 1]] + [[1, 2], [2, 1]], varname=D, result=[[2.00, 4.00], [4.00, 2.00]]}
Given a new evaluator
When I evaluate string D = [[1, 2], [2, 1]] + [[1, 2], [2, 1]]
When I evaluate string D
Then I should get result [[2.00, 4.00], [4.00, 2.00]]

Example: {input=E = det([[2, 4], [4, 2]]), varname=E, result=-12.00}
Given a new evaluator
When I evaluate string E = det([[2, 4], [4, 2]])
When I evaluate string E
Then I should get result -12.00

Example: {input=F = [1, 5, 2] * [1, 2, 3] + det([[1, 2], [2, 1]] + [[1, 2], [2, 1]]), varname=F, result=5.00}
Given a new evaluator
When I evaluate string F = [1, 5, 2] * [1, 2, 3] + det([[1, 2], [2, 1]] + [[1, 2], [2, 1]])
When I evaluate string F
Then I should get result 5.00


Scenario: Invalid format
Examples:
Given a new evaluator
When I evaluate string <input>
Then I should get an error message invalid input

|input|
|100.00 + 112.5A|
|([2, -2, 1] + [1, 5, 2 ) * [1, 2, 3]|
|3 + [1, 5, 2) * [1, 2, 3]|
|[[1, 2], 2, 1]] + [[1, 2], [2, 1]]|
|det([[[2, 4], [4, 2]])|
|[1, 5, 2] * [1, 2, 3] + det([[1, 2 [2, 1]] + [[1, 2], [2, 1]])|

Example: {input=100.00 + 112.5A}
Given a new evaluator
When I evaluate string 100.00 + 112.5A
Then I should get an error message invalid input

Example: {input=([2, -2, 1] + [1, 5, 2 ) * [1, 2, 3]}
Given a new evaluator
When I evaluate string ([2, -2, 1] + [1, 5, 2 ) * [1, 2, 3]
Then I should get an error message invalid input

Example: {input=3 + [1, 5, 2) * [1, 2, 3]}
Given a new evaluator
When I evaluate string 3 + [1, 5, 2) * [1, 2, 3]
Then I should get an error message invalid input

Example: {input=[[1, 2], 2, 1]] + [[1, 2], [2, 1]]}
Given a new evaluator
When I evaluate string [[1, 2], 2, 1]] + [[1, 2], [2, 1]]
Then I should get an error message invalid input

Example: {input=det([[[2, 4], [4, 2]])}
Given a new evaluator
When I evaluate string det([[[2, 4], [4, 2]])
Then I should get an error message invalid input

Example: {input=[1, 5, 2] * [1, 2, 3] + det([[1, 2 [2, 1]] + [[1, 2], [2, 1]])}
Given a new evaluator
When I evaluate string [1, 5, 2] * [1, 2, 3] + det([[1, 2 [2, 1]] + [[1, 2], [2, 1]])
Then I should get an error message invalid input


Scenario: Querying saved values
Examples:
Given a new evaluator
When I evaluate string <input1>
When I evaluate string <input2>
When I evaluate string <input3>
Then I should get result <result>

|input1|input2|input3|result|
|A = 100.00|B = -25|A + B|75.00|
|A = [2, -2, 1]|B = [1, 5, 2]|(A + B) * [1, 2, 3]|18.00|
|A = [[1, 2], [2, 1]]|B = [[1, 2], [2, 1]]|A + B|[[2.00, 4.00], [4.00, 2.00]]|

Example: {input1=A = 100.00, input2=B = -25, input3=A + B, result=75.00}
Given a new evaluator
When I evaluate string A = 100.00
When I evaluate string B = -25
When I evaluate string A + B
Then I should get result 75.00

Example: {input1=A = [2, -2, 1], input2=B = [1, 5, 2], input3=(A + B) * [1, 2, 3], result=18.00}
Given a new evaluator
When I evaluate string A = [2, -2, 1]
When I evaluate string B = [1, 5, 2]
When I evaluate string (A + B) * [1, 2, 3]
Then I should get result 18.00

Example: {input1=A = [[1, 2], [2, 1]], input2=B = [[1, 2], [2, 1]], input3=A + B, result=[[2.00, 4.00], [4.00, 2.00]]}
Given a new evaluator
When I evaluate string A = [[1, 2], [2, 1]]
When I evaluate string B = [[1, 2], [2, 1]]
When I evaluate string A + B
Then I should get result [[2.00, 4.00], [4.00, 2.00]]


Scenario: Querying saved values and saving new variable
Examples:
Given a new evaluator
When I evaluate string <input1>
When I evaluate string <input2>
When I evaluate string <input3>
When I evaluate string <input4>
Then I should get result <result>

|input1|input2|input3|input4|result|
|A = 100.00|B = -25|C = A + B|C|75.00|
|A = [2, -2, 1]|B = [1, 5, 2]|C = (A + B) * [1, 2, 3]|C|18.00|
|A = [[1, 2], [2, 1]]|B = [[1, 2], [2, 1]]|C = A + B|C|[[2.00, 4.00], [4.00, 2.00]]|

Example: {input1=A = 100.00, input2=B = -25, input3=C = A + B, input4=C, result=75.00}
Given a new evaluator
When I evaluate string A = 100.00
When I evaluate string B = -25
When I evaluate string C = A + B
When I evaluate string C
Then I should get result 75.00

Example: {input1=A = [2, -2, 1], input2=B = [1, 5, 2], input3=C = (A + B) * [1, 2, 3], input4=C, result=18.00}
Given a new evaluator
When I evaluate string A = [2, -2, 1]
When I evaluate string B = [1, 5, 2]
When I evaluate string C = (A + B) * [1, 2, 3]
When I evaluate string C
Then I should get result 18.00

Example: {input1=A = [[1, 2], [2, 1]], input2=B = [[1, 2], [2, 1]], input3=C = A + B, input4=C, result=[[2.00, 4.00], [4.00, 2.00]]}
Given a new evaluator
When I evaluate string A = [[1, 2], [2, 1]]
When I evaluate string B = [[1, 2], [2, 1]]
When I evaluate string C = A + B
When I evaluate string C
Then I should get result [[2.00, 4.00], [4.00, 2.00]]


Scenario: Querying a variable that is not saved
Examples:
Given a new evaluator
When I evaluate string <input>
Then I should get an error message no such variable

|input|
|A + B|
|det(A)|
|C * W|

Example: {input=A + B}
Given a new evaluator
When I evaluate string A + B
Then I should get an error message no such variable

Example: {input=det(A)}
Given a new evaluator
When I evaluate string det(A)
Then I should get an error message no such variable

Example: {input=C * W}
Given a new evaluator
When I evaluate string C * W
Then I should get an error message no such variable



